// Package restapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.1-0.20240325090356-a14414f04fdd DO NOT EDIT.
package restapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
