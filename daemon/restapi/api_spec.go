// Package restapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.1-0.20240325090356-a14414f04fdd DO NOT EDIT.
package restapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"VAa8Xy7q5vP/BAAA//+q7u9DDiMAAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
