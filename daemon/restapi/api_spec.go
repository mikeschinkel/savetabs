// Package restapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.1-0.20240325090356-a14414f04fdd DO NOT EDIT.
package restapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"Gpxbd96r1f8DAAD//314tolzHQAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
