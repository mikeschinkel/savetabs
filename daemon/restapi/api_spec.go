// Package restapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.1-0.20240325090356-a14414f04fdd DO NOT EDIT.
package restapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"RyYos7kmAAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
