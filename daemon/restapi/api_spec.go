// Package restapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.1-0.20240325090356-a14414f04fdd DO NOT EDIT.
package restapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"o1BgbTNTWy7/CgAA//9TQLf/DSEAAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
