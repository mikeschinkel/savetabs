// Package restapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.1-0.20240325090356-a14414f04fdd DO NOT EDIT.
package restapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"AA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
